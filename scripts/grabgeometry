#!/usr/local/bin/php
<?php
require_once '../lib/meekrodb.2.3.class.php';

$mb_token = 'pk.eyJ1IjoiYnJvY2hlYWZvaW4iLCJhIjoiY2loaWljbjNqMDR5MXRoajd3dmpmYmFrbiJ9.tbocSVZpED7Bu18y3jzB3g';

DB::$user = 'root';
DB::$password = 'root';
DB::$dbName = 'bixibeats';
DB::$host = '127.0.0.1'; //defaults to localhost if omitted
DB::$port = '33306'; // defaults to 3306 if omitted
DB::$encoding = 'utf8'; // defaults to latin1 if omitted

$batch_number = 0;
$routes_processed = 0;
$routes_count = DB::queryFirstField("select count(*) from routes;");

while (true) {
	getGeoJsonBatch();
	if ($routes_processed >= $routes_count) {
		echo "Holy crap. We are done!\n";
		break;
	}
	sleep(60);
}

function getGeoJsonBatch() {
	global $batch_number, $routes_processed, $mb_token;
	$routes = DB::query( "
SELECT
r.id,
o.longitude as o_longitude,
o.latitude as o_latitude,
o.nom as o_name,
o.id as o_id ,
d.longitude as d_longitude,
d.latitude as d_latitude,
d.nom as d_name,
d.id as d_id
FROM routes r
inner join stations o on r.start_station_id = o.id
inner join stations d on r.end_station_id = d.id
	where r.geojson is null or r.geojson = ''
	order by usage_count desc limit 60
 " );

	foreach ( $routes as $route ) {
		$o          = remove_zeros( $route['o_longitude'] ) . ',' . remove_zeros( $route['o_latitude'] );
		$d          = remove_zeros( $route['d_longitude'] ) . ',' . remove_zeros( $route['d_latitude'] );
		$url        = 'https://api.mapbox.com/v4/directions/mapbox.cycling/' . $o . ';' . $d . '.json?alternatives=false&instructions=text&geometry=geojson&steps=false&access_token=' . $mb_token;
		$result     = json_decode( file_get_contents( $url ) );
		$directions = $result->routes[0];
		$output     = array(
			'type'       => 'Feature',
			'properties' => array(
				'start_station_name' => $route['o_name'],
				'end_station_name'   => $route['d_name'],
				'start_station_id'   => $route['o_id'],
				'end_station_id'     => $route['d_id'],
				'route_id'           => $route['id'],
				'distance'           => $directions->distance,
				'duration'           => $directions->duration
			),
			'geometry'   => $directions->geometry
		);

		DB::update(
			'routes',
			array(
				'duration' => $directions->duration,
				'distance' => $directions->distance,
				'geojson'  => json_encode( $output )
			),
			"id=%d",
			$route['id']
		);
	}
	$batch_number += 1;
	$routes_processed += count($routes);

	echo "Batch $batch_number done. $routes_processed routes processed.\n";
}

function remove_zeros( $string ) {
	return rtrim( $string, '0');
}